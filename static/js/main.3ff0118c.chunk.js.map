{"version":3,"sources":["constants/User.js","reducers/user.js","reducers/index.js","store/index.js","components/Header/index.js","components/NoteEditor/index.js","components/NoteItem/index.js","components/NoteGrid/index.js","actions/UserActions.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_STICKERS","DELETE_STICKER","ADD_STICKER","initialState","notes","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","concat","store","createStore","rootReducer","composeWithDevTools","Header","text","this","props","header","react_default","a","createElement","className","Component","NoteEditor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hashCode","s","split","reduce","b","charCodeAt","event","setState","target","value","e","newSticker","bgColor","document","getElementById","addNote","placeholder","rows","onChange","bind","name","id","disabled","onClick","onSubmit","NoteItem","_ref","note","deleteNote","style","backgroundColor","messageID","NoteGrid","grid","msnry","Masonry","itemSelector","columnWidth","gutter","isFitWidth","prevProps","prevState","snapshot","reloadItems","layout","notesList","map","item","components_NoteItem","key","ref","fetchNotes","findByHashTag","dispatch","fetch","then","res","json","response","findHashTags","catch","error","console","log","getState","axios","method","url","data","URLSearchParams","push","noteId","i","splice","hashTags","len","word","words","indexOf","values","regex","prev","current","includes","formatMentionText","filteredNotes","hashTag","App","actions","filter","cancelHashTagSearch","noteItem","components_Header","components_NoteEditor","components_NoteGrid","connect","bindActionCreators","UserActions","Boolean","window","location","hostname","match","ReactDOM","render","react_redux_es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ff0118c.chunk.js","sourcesContent":["export const FETCH_STICKERS = 'FETCH_STICKERS';\r\nexport const DELETE_STICKER = 'DELETE_STICKER';\r\nexport const ADD_STICKER = 'ADD_STICKER';","import {DELETE_STICKER, ADD_STICKER, FETCH_STICKERS} from '../constants/User';\r\n\r\nlet initialState = {\r\n    notes: []\r\n};\r\n\r\nexport default function page(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_STICKERS:\r\n            return {...state, notes: action.notes};\r\n        case ADD_STICKER:\r\n            return {...state, notes: action.notes};\r\n        case DELETE_STICKER:\r\n            return {...state, notes: action.notes};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport user from './user';\r\n\r\nexport default combineReducers({\r\n    user\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from '../reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst initialState = {\r\n};\r\nconst enhancers = [];\r\nconst middleware = [\r\n    thunk\r\n];\r\nconst composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n);\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(composedEnhancers)\r\n);\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        const text = this.props.header || '';\r\n        return (\r\n            <h2 className=\"app-header\">\r\n                {text}\r\n            </h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nconst initialState = {\r\n    text: \"\"\r\n};\r\nclass NoteEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = initialState;\r\n    }\r\n\r\n    onChange(event){\r\n        this.setState({text: event.target.value});\r\n    };\r\n\r\n    hashCode = function(s){\r\n        return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\r\n    };\r\n\r\n    onSubmit(e){\r\n        const {text} = this.state;\r\n        const newSticker = {text: text,\r\n                            bgColor: document.getElementById('color').value};\r\n        this.props.addNote(newSticker);\r\n        this.setState({text: \"\"});\r\n    }\r\n\r\n    render() {\r\n        const text = this.state.text;\r\n        return (\r\n            <div className=\"note-editor\">\r\n                <textarea placeholder=\"Enter your note here ...\" rows=\"5\" onChange={this.onChange.bind(this)} name={\"text\"} value={text}/>\r\n                <input type={'color'} id={'color'}/>\r\n                <button className=\"add-button\" disabled={text.length === 0} onClick={this.onSubmit.bind(this)}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteEditor;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NoteItem = ({note, deleteNote}) =>{\r\n        const onClick = (e) => {\r\n          deleteNote(note.messageID);\r\n        };\r\n        return (\r\n            <div className=\"note\" style={{backgroundColor: note.bgColor}}>\r\n                <span className=\"delete-note\" onClick={onClick.bind(this)}>x</span>\r\n                {note.text}\r\n            </div>\r\n        )\r\n};\r\n\r\nNoteItem.propTypes = {\r\n    note: PropTypes.object.isRequired,\r\n    deleteNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NoteItem;\r\n","import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport Masonry  from 'masonry-layout';\r\nimport NoteItem from \"../NoteItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass NoteGrid extends Component{\r\n    componentDidMount() {\r\n        const grid = this.grid;\r\n        this.msnry = new Masonry(grid, {\r\n            itemSelector: '.note',\r\n            columnWidth: 200,\r\n            gutter: 10,\r\n            isFitWidth: true,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.msnry.reloadItems();\r\n        this.msnry.layout();\r\n    }\r\n\r\n    render() {\r\n        const notesList = this.props.notes.map(item => {\r\n            return (\r\n                <NoteItem note={item} deleteNote={this.props.deleteNote} key={item.messageID}/>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"notes-grid\" ref={grid => this.grid = grid}>\r\n                {notesList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNoteGrid.propTypes = {\r\n    notes: PropTypes.array.isRequired,\r\n    deleteNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NoteGrid;\r\n","import {DELETE_STICKER, FETCH_STICKERS, ADD_STICKER} from '../constants/User';\r\nimport axios from 'axios';\r\nimport fetch from \"cross-fetch\";\r\nimport React from \"react\";\r\n\r\nexport function fetchNotes(findByHashTag) {\r\n    return(dispatch) => {\r\n        fetch('https://apeps.kiev.ua/api/getMessages')\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                const notes = response.map(note => {return findHashTags(note, findByHashTag)});\r\n                dispatch({\r\n                    type: FETCH_STICKERS,\r\n                    notes: notes\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch({\r\n                    type: FETCH_STICKERS,\r\n                    notes: []\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport function addNote(note, findByHashTag) {\r\n    return(dispatch, getState) => {\r\n        let notes = getState().user.notes;\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://apeps.kiev.ua/api/addMessage',\r\n            data: new URLSearchParams(note)\r\n        })\r\n            .then(response => {\r\n                if (response.data) {\r\n                    note.messageID = response.data;\r\n                    note = findHashTags(note, findByHashTag);\r\n                    notes.push(note);\r\n                    dispatch({\r\n                        type: ADD_STICKER,\r\n                        notes: notes\r\n                    });\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n                dispatch({\r\n                    type: ADD_STICKER,\r\n                    notes: notes\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport function deleteNote(noteId) {\r\n    return(dispatch, getState) => {\r\n        let notes = getState().user.notes;\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://apeps.kiev.ua/api/deleteMessage',\r\n            data: new URLSearchParams({ messageID: noteId })\r\n        });\r\n        for (let i = 0; i < notes.length; i++){\r\n            if (notes[i].messageID === noteId) {\r\n                notes.splice(i, 1);\r\n            }\r\n        }\r\n        dispatch({\r\n            type: DELETE_STICKER,\r\n            notes: notes\r\n        })\r\n    }\r\n}\r\n\r\nfunction findHashTags(note, findByHashTag){\r\n    let hashTags, i, len, word, words;\r\n    words = note.text.split(/[\\s\\r\\n]+/);\r\n    hashTags = [];\r\n    for (i = 0, len = words.length; i < len; i++) {\r\n        word = words[i];\r\n        if (word.indexOf('#') === 0) {\r\n            hashTags.push(word);\r\n        }\r\n    }\r\n    note.hashTags = hashTags;\r\n    note.text = formatMentionText(note.text, note.hashTags, /(#[A-Za-z0-9]+(?:|$))/g, findByHashTag);\r\n    return note;\r\n}\r\n\r\nfunction formatMentionText(text, values, regex, findByHashTag){\r\n    if (!values.length)\r\n        return text;\r\n    console.log(text.split(regex));\r\n    return (<span>\r\n            {text.split(regex)\r\n                .reduce((prev, current, i) => {\r\n                    if (!i)\r\n                        return [current];\r\n\r\n                    return prev.concat(\r\n                        values.includes(current)  ?\r\n                            <a onClick={findByHashTag.bind(this, current)}>\r\n                                {current}\r\n                            </a>\r\n                            : current\r\n                    );\r\n                }, [])}\r\n        </span>);\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header\";\r\nimport NoteEditor from \"./components/NoteEditor\";\r\nimport NoteGrid from \"./components/NoteGrid\";\r\nimport NoteItem from \"./components/NoteItem\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport * as UserActions from \"./actions/UserActions\";\r\n\r\nconst initialState = {\r\n  filteredNotes: null,\r\n  hashTag: null\r\n};\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount(){\r\n      this.props.actions.fetchNotes(this.findByHashTag);\r\n  }\r\n\r\n  addNote = (note) => {\r\n      this.props.actions.addNote(note, this.findByHashTag);\r\n  };\r\n\r\n  findByHashTag = (hashTag) => {\r\n     const filteredNotes = this.props.user.notes.filter(note => {return note.hashTags && note.hashTags.includes(hashTag)});\r\n     this.setState({filteredNotes: filteredNotes, hashTag: hashTag});\r\n  };\r\n\r\n  cancelHashTagSearch = () => {\r\n    this.setState({filteredNotes: null, hashTag: null});\r\n  };\r\n\r\n  deleteNote = (noteId) => {\r\n      this.props.actions.deleteNote(noteId);\r\n  };\r\n\r\n  render() {\r\n    const notes = this.state.filteredNotes || this.props.user.notes;\r\n    const hashTag = this.state.hashTag;\r\n    const noteItem = {text: hashTag, bgColor: `rgb(255, 0, 1)`};\r\n    console.log(notes);\r\n    return (\r\n      <div className=\"App\">\r\n        <Header header={'Notes App'}/>\r\n        {(hashTag) ? <NoteItem deleteNote={this.cancelHashTagSearch} note={noteItem}/> : \"\"}\r\n        <NoteEditor addNote={this.addNote}/>\r\n        <NoteGrid notes={notes} deleteNote={this.deleteNote}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({...UserActions}, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}